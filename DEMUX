----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 21.01.2025 18:48:53
-- Design Name: 
-- Module Name: Demux - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity Demux is
  Port ( 
        sel : in std_logic;
        data_valid : out std_logic;
        busy : in std_logic;
        data_in : in std_logic_vector(7 downto 0);
        data_fir : out std_logic_vector(7 downto 0);
        data_t : out std_logic_vector(7 downto 0);
        clk_fs : in std_logic;
        clk : in std_logic
  );
end Demux;

architecture Behavioral of Demux is

signal clk_fs_prev : std_logic := '0';
signal valid : std_logic := '0';


begin
data_valid <= valid;

    process(clk)
        begin
            if rising_edge(clk) then
                clk_fs_prev <= clk_fs;
                if sel ='0' then
                    if clk_fs_prev = '0' and clk_fs = '1' then
                        valid <= '1';
                    else
                        valid <= '0';
                    end if;
                else
                    valid <= '0';
                end if;
            end if;
    end process;
 

  process(clk_fs)
        begin
            if rising_edge(clk_fs) then
                if sel = '1' then
                    data_fir <= data_in;
                else
                        if busy = '0' then
                            data_t <= data_in;
                        end if; 
            end if;  
            end if;        
       end process;
end Behavioral;
